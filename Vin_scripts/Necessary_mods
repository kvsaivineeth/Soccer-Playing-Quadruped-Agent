envs.py (a2c-ppo-akctr) --   in VecPytorch     if isinstance(actions, (torch.LongTensor, torch.cuda.LongTensor)):


Added these :

from dm_control import suite
from dm2gym import DMControlEnv
from gym.wrappers import FlattenDictWrapper


        if env_id.startswith("dm"):
            _, domain, task = env_id.split('.')
            env=suite.load(domain,task,environment_kwargs=dict(flat_observation=True))
            env=DMControlEnv(env)
            env=FlattenDictWrapper(env,['observations'])

In dm2gym -> dm_control_env.py 

Modified these : 

	from dm_env.specs import Array as ArraySpec
	from dm_env.specs import BoundedArray as BoundedArraySpec

In enjoy.py (a2c-ppo-akctr) : 

Added this 

   device=torch.device('cuda' if torch.cuda.is_available() else 'cpu') in env definition
